#! /usr/bin/env python3

from io import TextIOWrapper
from datetime import datetime
import sys
import os.path as path;

def main():
    if (len(sys.argv) != 2):
        print('Usage: generate_ast <output_directory>', file=sys.stderr);
        sys.exit(1)

    outputDir: str = sys.argv[1];
    basename = 'Expr';
    exprTypes = [
            'Binary : Expr left, Token operator, Expr right',
            'Grouping : Expr expression',
            'Literal : Object value',
            'Unary : Token operator, Expr right'
            ]

    defineAst(outputDir, basename, exprTypes)

def defineAst(outputDir: str, baseName: str, exprTypes: list[str]):
    if (not path.exists(outputDir) or not path.isdir(outputDir)):
        print(f'[Error] "{outputDir}" does not exist or is not a directory')
        sys.exit(1)

    with open(path.join(outputDir, f'{baseName}.java'), 'w') as outputFile:
        currentDate = datetime.now().strftime("%d/%m/%Y %H:%M:%S")

        outputFile.write('/*\n* This code was auto generated by "generate_ast". Edit at our own risk.\n')
        outputFile.write(f' * Date: {currentDate}\n');
        outputFile.write('*/\n\n')
        outputFile.write('package com.phandal.lox;\n\n');
        outputFile.write('import java.util.List;\n\n');
        outputFile.write(f'abstract class {baseName} {"{"}\n\n')

        for exprType in exprTypes:
            className = exprType.split(':')[0].strip()
            fieldList = exprType.split(':')[1].strip()
            defineType(outputFile, baseName, className, fieldList);

        outputFile.write('}');

def defineType(file: TextIOWrapper, baseName: str, className: str, fieldList: str):
    file.write(f'   static class {className} extends {baseName} {"{"}\n')

    # Constructor
    file.write(f'       {className} ({fieldList}) {"{"}\n')
    fields = fieldList.split(', ')

    for field in fields :
            name = field.split(' ')[1];
            file.write(f'           this.{name} = {name};\n')
    file.write('        }\n\n')

    # Fields
    for field in fields:
        file.write(f'        final {field};\n');

    file.write('    }\n\n')

if __name__ == '__main__':
    main()
